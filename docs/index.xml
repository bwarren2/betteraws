<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Better AWS Docs</title>
    <link>https://bwarren2.github.io/betteraws/</link>
    <description>Recent content on Better AWS Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; Copyright 2017 Your name</copyright>
    <lastBuildDate>Wed, 04 Sep 2019 20:47:08 -0400</lastBuildDate>
    
	<atom:link href="https://bwarren2.github.io/betteraws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>S3, Part 2</title>
      <link>https://bwarren2.github.io/betteraws/s3_2/</link>
      <pubDate>Wed, 04 Sep 2019 20:47:08 -0400</pubDate>
      
      <guid>https://bwarren2.github.io/betteraws/s3_2/</guid>
      <description>TLDR, This Section Advanced Operations  Purported Docs CLI Docs  Rehashing You can redo the operations from last time with the expanded toolkit of aws s3api, but there are more flags to manage. For example, to put an object onto s3:
$ aws s3api create-bucket --bucket betteraws-more-cat-gifs { &amp;quot;Location&amp;quot;: &amp;quot;/betteraws-more-cat-gifs&amp;quot; } $ aws s3api list-objects --bucket betteraws-more-cat-gifs $ aws s3api put-object --bucket betteraws-more-cat-gifs --key more-shaq.gif --body cat-shaq-wiggles.gif { &amp;quot;ETag&amp;quot;: &amp;quot;\&amp;quot;1ec35ab1efd1d8fada033cb5ab546d66\&amp;quot;&amp;quot; } $ aws s3api list-objects --bucket betteraws-more-cat-gifs { &amp;quot;Contents&amp;quot;: [ { &amp;quot;Key&amp;quot;: &amp;quot;more-shaq.</description>
    </item>
    
    <item>
      <title>S3, Part 1</title>
      <link>https://bwarren2.github.io/betteraws/s3/</link>
      <pubDate>Wed, 21 Aug 2019 21:36:56 -0400</pubDate>
      
      <guid>https://bwarren2.github.io/betteraws/s3/</guid>
      <description>TLDR Basic Operations  Purported Docs CLI Docs  Advanced Operations  Purported Docs CLI Docs  Job Operations  Purported Docs CLI Docs  Intro In the spirit of there being one, and only one, right way to do things, there are three different s3 cli namespaces. Broadly, they are:
 Analogues of the basic unix operations, like cp, ls, rm, mv, and create/delete bucket. Everything else supported for s3 stuff, like acl policies, inventory policies, cors, encryption, etc.</description>
    </item>
    
    <item>
      <title>IAM</title>
      <link>https://bwarren2.github.io/betteraws/iam/</link>
      <pubDate>Wed, 14 Aug 2019 19:38:47 -0400</pubDate>
      
      <guid>https://bwarren2.github.io/betteraws/iam/</guid>
      <description>TLDR  Purported Docs CLI Docs  What is IAM? IAM is Identity and Access Management. It&amp;rsquo;s used for managing users, groups, and roles, in the service of controlling permissions.
Create a user Invocations to the aws cli are of the form aws &amp;lt;service&amp;gt; &amp;lt;action&amp;gt; --arg1 value1 --arg2 value2 .... In this case:
aws iam create-user --user-name s3user
if you are storing credentials via profiles and want to use one of those, you might invoke this instead as</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://bwarren2.github.io/betteraws/getting_started/</link>
      <pubDate>Mon, 22 Jul 2019 13:37:04 -0400</pubDate>
      
      <guid>https://bwarren2.github.io/betteraws/getting_started/</guid>
      <description>Making an account Go make an AWS account. This will set you up with an AWS account and a root account user. The credentials for this user should be super secure, and very rarely used. Most of the things you need the root user account to do involve billing/payment, and are done at most infrequently.
Making a user for administration Make an IAM user, assign it to the Admin group.</description>
    </item>
    
  </channel>
</rss>